services:

  streaming-data-loader:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streaming-data-loader
    env_file: .env
    ports:
      - "8000:8000"               # Metrics
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      KAFKA_BOOTSTRAP_SERVERS: kafka-cluster:9092
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka-cluster:
        condition: service_started
    networks:
      - loader

  kafka-cluster:
    image: landoop/fast-data-dev:latest
    hostname: kafka-cluster
    container_name: kafka-cluster
    ports:
      - "2181:2181"               # Zookeeper
      - "3030:3030"               # Landoop UI
      - "8081-8083:8081-8083"     # REST Proxy, Schema Registry, Kafka Connect ports
      - "9581-9585:9581-9585"     # JMX Ports
      - "9092:9092"               # Kafka Broker
    environment:
      ADV_HOST: 127.0.0.1
      RUNTESTS: 0                 # Disable Running tests so the cluster starts faster
    volumes:
      - "./volumes/kafka/data:/data"
    networks:
      - loader

  elasticsearch:
    image: elasticsearch:${ELK_VERSION:-8.17.2}
    hostname: elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - "9200:9200"             # HTTP REST
      - "9300:9300"             # Native transport
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200 || exit 1" ]
      interval: 10s
      retries: 5
    volumes:
      - "./volumes/elastic/data:/usr/share/elasticsearch/data"
    networks:
      - loader

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./alerts.yml:/etc/prometheus/alerts.yml"
      - "./volumes/prometheus/data:/prometheus"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - loader

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - "./volumes/grafana/data:/var/lib/grafana"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    depends_on:
      prometheus:
        condition: service_started
    networks:
      - loader

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - loader

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - CGROUP_V2=1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - loader

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - loader

networks:
  loader:
    driver: bridge
